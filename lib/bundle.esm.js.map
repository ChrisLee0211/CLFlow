{"version":3,"file":"bundle.esm.js","sources":["../src/utils/index.ts","../src/core/validate.ts","../src/core/computed.ts","../src/utils/ColorReverse.ts","../src/baseShape/nodeShape.ts","../src/baseShape/edgeShape.ts","../src/utils/Debounce.ts","../src/utils/ResizeObserver.ts","../src/utils/DeQueue.ts","../src/core/index.ts"],"sourcesContent":["const typeEnum = {\n    \"string\":\"[object String]\",\n    \"number\":\"[object Number]\",\n    \"boolean\":\"[object Boolean]\",\n    \"undefined\":\"object Undefined]\",\n    \"null\":\"object Null]\",\n    \"object\":\"[object Object]\",\n    \"function\":\"[object Function]\",\n    \"array\":\"[object Array]\",\n    \"date\":\"[object Date]\",\n    \"reg\":\"[object RegExp]\"\n};\n\n\n/**\n * Verify that a value is an object\n * @param {any} obj \n * @returns {boolean}\n * @author  chrislee\n * @Time 2020/7/12\n */\nexport const isObject:(obj:unknown)=>boolean = (obj) =>{\n    let res = true;\n    if(Object.prototype.toString.call(obj) === '[object Object]'){\n        res = true;\n    }else{\n        res = false;\n    }\n    return res;\n};\n\n/**\n * Verify that a value is undefined\n * @param {any} obj\n * @returns {boolean}\n * @author chrislee\n * @Time 2020/7/12\n */\nexport const isUndefined:(obj:unknown)=>boolean = (obj) => {\n    let res: boolean;\n    if(obj === undefined||Object.prototype.toString.call(obj)===typeEnum[\"undefined\"]){\n        res = true;\n    }else{\n        res = false;\n    }\n    return res;\n};\n\n/**\n * Verify that a value is an array\n * @param {any} obj\n * @returns {boolean}\n * @author chrislee\n * @Time 2020/7/12\n */\nexport const isArray:(obj:unknown)=>boolean = (obj) =>{\n    let res:boolean;\n    if(obj instanceof Array || Object.prototype.toString.call(obj)===typeEnum[\"array\"]){\n        res = true;\n    }else{\n        res = false;\n    }\n    return res;\n};\n\n/**\n * Verify that a value is an boolean\n * @param {any} obj\n * @returns {boolean}\n * @author chrislee\n * @Time 2020/7/12\n */\nexport const isBoolean:(obj:unknown) => boolean = (obj) => {\n    let res:boolean;\n    if( Object.prototype.toString.call(obj)===typeEnum[\"boolean\"]){\n        res = true;\n    }else{\n        res = false;\n    }\n    return res;\n};\n\nexport const isDom:(obj:HTMLElement) => boolean = (obj) => {\n    let res:boolean;\n    if( typeof window.HTMLElement === \"object\"){\n        res = obj instanceof window.HTMLElement\n    }else{\n        res = obj && typeof obj === 'object' && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n    }\n    return res\n}\n\nexport const typeValidate:(obj:unknown,type:keyof typeof typeEnum,constant?:string)=>boolean = (obj,type,constant=`The value of target`) =>{\n    let res:boolean;\n    if(Object.prototype.toString.call(obj)=== typeEnum[type]){\n        res = true;\n    }else{\n        let currentType = `undefined`;\n        for(const key in typeEnum){\n            if(typeEnum[key] === Object.prototype.toString.call(obj)){\n                currentType = key;\n            }\n        }\n        throw TypeError(`${constant} expect a ${type},but got ${currentType}`);\n    }\n    return res;\n};","import {ClConfig} from \"./index\";\nimport {typeValidate, isDom} from \"../utils/index\";\n\ntype minimapType = {size:[number,number]|number,className:string}\n\n/**\n * 校验配置项信息\n * @param cfg 初始化配置项\n * @author chrislee\n * @Time 2020/9/15\n */\nexport const validateConfig = (cfg:ClConfig):boolean => {\n    // 必传项验证\n    const required:Array<string> = [\"container\",\"direction\",\"height\",\"renderer\",\"width\"];\n    const isMatchedRequired:boolean = Object.keys(cfg).every((key) => required.includes(key));\n    // 容器类型验证\n    const containerValidate:boolean = isDom(cfg[\"container\"]);\n    // 布局流向配置验证\n    const directionValidate = typeValidate(cfg[\"direction\"],\"string\") && [\"vertical\",\"horizontal\"].includes(cfg[\"direction\"]);\n    // 高宽验证\n    const heightValidate:boolean = typeValidate(cfg[\"height\"],\"number\");\n    const widthValidate:boolean = typeValidate(cfg[\"width\"],\"number\");\n    /** 渲染模式验证 */\n    const rendererValidate = typeValidate(cfg[\"renderer\"],\"string\") && [\"svg\",\"canvas\"].includes(cfg[\"renderer\"]);\n    let allValidate = [isMatchedRequired,\n        containerValidate,\n        directionValidate,\n        heightValidate,\n        widthValidate,\n        rendererValidate,]\n    return allValidate.every(v=>v===true)\n}","/**\n * 根据排列方向计算下一个节点的推荐坐标\n * @param direction 方向\n * @param node 当前节点\n * @returns {x,y}\n * @author chrislee\n * @Time 2020/9/8\n */\nexport const countNextNodePosition = (direction: directionType, node: nodeInfo): { x: number; y: number } => {\n    const { x, y } = node;\n    const result = { x: 0, y: 0 };\n    if (direction === \"horizontal\") {\n        result.x = (x ?? 0) + (node.size as number) * 4;\n        result.y = y ?? 0;\n    } else {\n        result.y = (y ?? 0) + (node.size as number) * 4;\n        result.x = x ?? 0;\n    }\n    return result;\n};","/**\n * 颜色取反\n * @param OldColorValue 十六进制颜色码\n * @returns color 取反后的十六进制颜色码\n * @author chrislee\n * @Time 2020/9/16\n */\nexport function ColorReverse(OldColorValue: string) {\n    const reverse = `0x${OldColorValue.replace(/#/g, \"\")}`;\n    const str = `000000${(0xffffff - (reverse as any)).toString(16)}`;\n    return `#${str.substring(str.length - 6, str.length)}`;\n}","import G6 from \"@antv/g6\";\nimport { IShape } from '@antv/g-canvas/lib/interfaces';\nimport { ClConfig } from \"src/core\";\nimport { ColorReverse } from \"src/utils/ColorReverse\";\n\nexport function nodeRegisterInit(instance: typeof G6,baseConfig:ClConfig):void{\n\n    const reNodeColor = ColorReverse(baseConfig[\"baseNodeColor\"] as string);\n    const nodeColor = baseConfig[\"baseNodeColor\"];\n    /**\n     * 圆角方框型节点注册逻辑\n     * @author chrislee\n     * @Time 2020/5/10\n     */\n    instance.registerNode(\"rect-node\", {\n        draw(cfg, group) {\n            let shape: IShape = {} as any;\n            const rectWidth: number = cfg?.size instanceof Array ? cfg.size[0] : cfg?.size ?? 100;\n            const rectHeight: number = Number(rectWidth) / 2;\n            if (group) {\n                shape = group.addShape(\"rect\", {\n                    attrs: {\n                        x: 0,\n                        y: 0,\n                        width: rectWidth * 2,\n                        height: rectHeight * 2,\n                        stroke: \"#1890FF\",\n                        fill:nodeColor,\n                        lineWidth: 10,\n                        radius: 5,\n                    },\n                    name: \"rectNode\",\n                    draggable: true\n                });\n                group.addShape(\"text\", {\n                    attrs: {\n                        x: rectWidth,\n                        y: rectHeight,\n                        text: cfg?.label,\n                        fontSize: cfg?.labelCfg?.style?.fontSize,\n                        fill: reNodeColor,\n                        width: rectWidth,\n                        height: rectHeight,\n                        textAlign: \"center\",\n                        textBaseline: \"middle\",\n                        lineHeight: rectHeight,\n                    },\n                    name: \"rectNode-text\",\n                    draggable: true\n                });\n            }\n            return shape;\n        },\n        // 其他方法\n        getAnchorPoints() {\n            return [\n                [0.5, 0], // 顶部中间\n                [1, 0.5], // 右侧中间\n                [0.5, 1], // 底部中间\n                [0, 0.5], // 左侧中间\n            ];\n        },\n    });\n}","import G6 from \"@antv/g6\";\nimport { IShape } from '@antv/g-canvas/lib/interfaces';\nimport { ModelConfig, EdgeConfig } from \"@antv/g6/lib/types\";\nimport { ClConfig } from \"src/core\";\nimport {ColorReverse} from \"../utils/ColorReverse\";\n\nexport function edgeRegisterInit(instance:typeof G6,baseConfig:ClConfig):void{\n\n    const edgeColor = baseConfig[\"baseEdgeColor\"]\n    /**\n     * 条件指向线图形注册逻辑(水平流向)\n     * @author chrislee\n     * @Time 2020/9/10\n     */\n    instance.registerEdge(\"mutex-line-horizontal\", {\n        draw(cfg, group) {\n            let shape: IShape = null as any;\n            let startAnchorPoint: {x: number;y: number;index: number} | null = null;\n            const sourceAnchorIndex: number = ((cfg as ModelConfig)?.sourceAnchor as number) ?? 0;\n            if ((cfg as any).sourceNode) {\n                startAnchorPoint = (cfg as any).sourceNode._cfg.anchorPointsCache[sourceAnchorIndex];\n            }\n            const startPoint = startAnchorPoint ?? { x: 0, y: 0 };\n            const endPoint = cfg?.endPoint ?? { x: 0, y: 0 };\n            // const centerPoint: { x: number; y: number } = {\n            //     x: (startPoint.x + endPoint.x) / 2,\n            //     y: (startPoint.y + endPoint.y) / 2\n            // };\n            if (group) {\n                shape = group.addShape(\"path\", {\n                    attrs: {\n                        stroke: edgeColor,\n                        path: [\n                            [\"M\", startPoint.x, startPoint.y],\n                            [\"L\", startPoint.x, endPoint.y / 3 + (2 / 3) * endPoint.y],\n                            [\"L\", endPoint.x, endPoint.y],\n                        ],\n                        lineWidth: 10,\n                        endArrow: {\n                            path: \"M 0,0 L -2,1 L 0,0 L -2,-1 L 0,0\",\n                            fill: edgeColor,\n                            stroke: \"#666\",\n                            opacity: 0.8,\n                        }\n                    },\n                    name: \"mutexLineHorizontal\"\n                });\n            }\n            return shape;\n        }\n    });\n    /**\n     * 条件指向线图形注册逻辑(垂直流向)\n     * @author chrislee\n     * @Time 2020/9/10\n     */\n    instance.registerEdge(\"mutex-line-vertical\", {\n        draw(cfg, group) {\n            let shape: IShape = null as any;\n            let startAnchorPoint: {x: number;y: number;index: number} | null = null;\n            const sourceAnchorIndex: number = ((cfg as ModelConfig)?.sourceAnchor as number) ?? 0;\n            if ((cfg as any).sourceNode) {\n                startAnchorPoint = (cfg as any).sourceNode._cfg.anchorPointsCache[sourceAnchorIndex];\n            }\n            const startPoint = startAnchorPoint ?? { x: 0, y: 0 };\n            const endPoint = cfg?.endPoint ?? { x: 0, y: 0 };\n            if (group) {\n                shape = group.addShape(\"path\", {\n                    attrs: {\n                        stroke: edgeColor,\n                        path: [\n                            [\"M\", startPoint.x, startPoint.y],\n                            [\"L\", startPoint.x * (1 / 3) * startPoint.y, startPoint.y],\n                            [\"L\", endPoint.x, endPoint.y],\n                        ],\n                        lineWidth: 10,\n                        endArrow: {\n                            path: \"M 0,0 L -2,1 L 0,0 L -2,-1 L 0,0\",\n                            fill: edgeColor,\n                            stroke: \"#666\",\n                            opacity: 0.8,\n                        }\n                    },\n                    name: \"mutexLineVertical\"\n                });\n            }\n            return shape;\n        }\n    });\n\n    /**\n     * 回流线注册逻辑(水平流向)\n     * @author chrislee\n     * @Time 2020/9/10\n     */\n    instance.registerEdge(\"reback-line-horizontal\", {\n        draw(cfg, group) {\n            let shape: IShape = null as any;\n            let startAnchorPoint: {x: number;y: number;index: number} | null = null;\n            const sourceAnchorIndex: number = ((cfg as ModelConfig)?.sourceAnchor as number) ?? 0;\n            if ((cfg as any).sourceNode) {\n                startAnchorPoint = (cfg as any).sourceNode._cfg.anchorPointsCache[sourceAnchorIndex];\n            }\n            const startPoint = startAnchorPoint ?? { x: 0, y: 0 };\n            const endPoint = cfg?.endPoint ?? { x: 0, y: 0 };\n            const sourceNodeSize = ((cfg as EdgeConfig).sourceNode?._cfg.model?.size) ?? 200;\n            if (group) {\n                shape = group.addShape(\"path\", {\n                    attrs: {\n                        stroke: edgeColor,\n                        path: [\n                            [\"M\", startPoint.x, startPoint.y],\n                            [\"L\", startPoint.x, startPoint.y - (sourceNodeSize as number)],\n                            [\"L\", endPoint.x, startPoint.y - (sourceNodeSize as number)],\n                            [\"L\", endPoint.x, endPoint.y]\n                        ],\n                        lineWidth: 10,\n                        endArrow: {\n                            path: \"M 0,0 L -2,1 L 0,0 L -2,-1 L 0,0\",\n                            fill: \"#333\",\n                            stroke: \"#666\",\n                            opacity: 0.8,\n                        }\n                    },\n                    name: \"rebackLineHorizontal\"\n                });\n            }\n            return shape;\n        }\n    });\n\n    /**\n     * 回流线注册逻辑(垂直流向)\n     * @author chrislee\n     * @Time 2020/9/10\n     */\n    instance.registerEdge(\"reback-line-vertical\", {\n        draw(cfg, group) {\n            let shape: IShape = null as any;\n            let startAnchorPoint: {x: number;y: number;index: number} | null = null;\n            const sourceAnchorIndex: number = ((cfg as ModelConfig)?.sourceAnchor as number) ?? 0;\n            if ((cfg as any).sourceNode) {\n                startAnchorPoint = (cfg as any).sourceNode._cfg.anchorPointsCache[sourceAnchorIndex];\n            }\n            const startPoint = startAnchorPoint ?? { x: 0, y: 0 };\n            const endPoint = cfg?.endPoint ?? { x: 0, y: 0 };\n            const sourceNodeSize = ((cfg as EdgeConfig).sourceNode?._cfg.model?.size) ?? 200;\n            if (group) {\n                shape = group.addShape(\"path\", {\n                    attrs: {\n                        stroke: edgeColor,\n                        path: [\n                            [\"M\", startPoint.x, startPoint.y],\n                            [\"L\", startPoint.x - (sourceNodeSize as number), startPoint.y],\n                            [\"L\", startPoint.x - (sourceNodeSize as number), endPoint.y],\n                            [\"L\", endPoint.x, endPoint.y]\n                        ],\n                        lineWidth: 10,\n                        endArrow: {\n                            path: \"M 0,0 L -2,1 L 0,0 L -2,-1 L 0,0\",\n                            fill: \"#333\",\n                            stroke: \"#666\",\n                            opacity: 0.8,\n                        }\n                    },\n                    name: \"rebackLineVertical\"\n                });\n            }\n            return shape;\n        }\n    });\n\n}","/**\n * 函数防抖\n * @param fn 要进行防抖的函数\n * @param delay 防抖的间隔事件，单位ms\n * @author chrislee\n * @Time 2020/6/24\n */\nexport const debounce = (fn: Function, delay = 500): Function => {\n    let timer= null as any;\n    return function (this: any, ...args: any): void {\n        if (timer) {\n            clearTimeout(timer);\n        }\n        timer = setTimeout(() => {\n            fn.apply(this, args);\n        }, delay);\n    };\n};","import {debounce} from \"./Debounce\"\ninterface ResizeObserverType {\n    dom:HTMLElement,\n    init():void,\n    resizer(fn:(cfg:ResizeObserverEntry[\"contentRect\"])=>void):void,\n    off():void\n}\ntype callback = (rect:ResizeObserverEntry[\"contentRect\"])=>void\n/**\n * 单元素尺寸改变监听器\n * @author chrislee\n * @Time 2020/8/23\n */\nexport class Resizer implements ResizeObserverType{\n    dom:HTMLElement;\n    private ins:ResizeObserver|null = null;\n    private isWrongParam:boolean = false\n    /**\n     * 实例化一个元素尺寸监听器\n     * @param id 要监听的目标元素id\n     */\n    constructor(id:string){\n        let target:HTMLElement|null;\n        try{\n            target = document.getElementById(id);\n            if(target){\n                this.dom = target;\n            }else{\n                this.isWrongParam = true\n                throw new Error('the element id is invalid')\n            }\n        }catch(e){\n            this.isWrongParam = true\n            this.dom = document.documentElement\n        }\n    }\n    /**\n     * 初始化操作,验证是否支持ResizeObserver API\n     * @author chrislee\n     * @Time 2020/9/14\n     */\n    init(){\n        if(this.isWrongParam){\n            throw new Error(`please use a correct element id`)\n        }\n        if(!window.ResizeObserver){\n            throw new Error(`the browser can not suppose \"ResizeObserver\",please change or update browser`)\n        }\n    }\n    resizer(fn:callback){\n        const cb = debounce((cfg:ResizeObserverEntry[\"contentRect\"])=>{\n            fn(cfg)\n        },100)\n        this.ins = new ResizeObserver((entries)=>{\n            if(entries.length > 0){\n                cb(entries[0].contentRect)\n            }\n        });\n        this.ins.observe(this.dom,{box:\"border-box\"})\n    }\n    off(){\n        this.ins?.unobserve(this.dom)\n    }\n}","interface QueueItem {\n    [key:number]:any\n}\ninterface QueueType {\n    size():number\n    pop():any\n    push(item:any):void\n    clear():any\n    getAll():void\n}\ninterface DeQueueType extends QueueType {\n    shift():any\n    unshift(item:any):void\n}\n/**\n * 双端队列生成器\n * size:属性，当前队列长度\n * pop:出列操作，弹出队列尾部元素并返回\n * shift: 弹出队列头部元素并返回\n * unshift: 插入元素到队列头部\n * push:插入元素到队列尾部\n * clear:清空队列\n * getAll:打印队列中所有的元素\n */\nexport class DeQueue implements DeQueueType {\n    /** 队列大小 */\n    private count:number = 0;\n    /**队列头部元素指针 */\n    private headIndex:number = 0;\n    /** 队列实体 */\n    private queue:QueueItem = {};\n    constructor(){\n        this.init()\n    }\n    /** 初始化方法 */\n   private init(){\n        this.count = 0;\n        this.headIndex = 0;\n        this.queue = {}\n    }\n    /** 推入一个元素到队列尾部 */\n    push(item:any){\n        this.queue[this.count] = item;\n        this.count++\n    }\n    /** 获取队列的大小 */\n    size(){\n        return this.count - this.headIndex\n    }\n    /** 弹出队列尾部元素 */\n    pop(){\n        const len = this.size();\n        if(len<=0) return undefined;\n        const result = this.queue[this.count-1];\n        delete this.queue[this.count-1];\n        this.count --;\n        return result\n    }\n    /** 弹出队列头部元素 */\n    shift(){\n        const len = this.size();\n        if(len<=0) return undefined;\n        const result = this.queue[this.headIndex];\n        delete this.queue[this.headIndex];\n        this.headIndex ++;\n        return result\n    }\n    /** 插入元素到队列头部 */\n    unshift(item:any){\n        if(this.size()<=0){\n            this.push(item);\n        }else{\n            if(this.headIndex>0){\n                // 队首元素指针不为0时\n                this.headIndex --;\n                this.queue[this.headIndex] = item;\n            }else{\n                // 队首元素指针为0，我们需要将将队列里的0号key空出来，其他数据整体向后移动一位。\n        for (let i = this.count; i > 0; i--){\n            this.queue[i] = this.queue[i - 1];\n        }\n        // 队列长度自增\n        this.count++;\n        // 队首元素设为0\n        this.headIndex = 0;\n        // 为队首的0号key添加当前元素\n        this.queue[0] = item;\n            }\n        }\n    }\n    /** 清空队列 */\n    clear(){\n       this.init()\n    }\n    /** 打印队列内部所有元素 */\n    getAll(){\n        const result:any[] = [];\n        for(let i=this.headIndex;i<this.count;i++){\n            result.push(this.queue[i])\n        }\n        console.log(result)\n    }\n}","import G6, { Graph,Algorithm } from \"@antv/g6\";\nimport { GraphData, NodeConfig, EdgeConfig } from \"@antv/g6/lib/types\";\nimport MiniMap from \"@antv/g6/lib/plugins/minimap\";\nimport {validateConfig} from \"./validate\";\nimport {countNextNodePosition} from \"./computed\";\nimport {nodeRegisterInit,edgeRegisterInit} from \"./g6Config\";\n\nimport {isArray} from \"../utils\";\nimport {Resizer} from \"../utils/ResizeObserver\";\nimport {DeQueue} from \"../utils/DeQueue\";\nimport { ColorReverse } from \"src/utils/ColorReverse\";\n\ninterface ClFlowClass {\n    instance:typeof G6;\n    init(data:GraphData):ClFlowClass;\n    createNode(cfg:nodeInfo):void;\n    addRelation(source:nodeInfo,target:nodeInfo,type:\"single\"|\"multi\"):void;\n    updateNode(cfg:any):void;\n    deleteNode(id:string):void;\n    addReback(sourceId:string,targetId:string):void;\n    getRebackNodes(id:string):Array<any>;\n    getUndoSteps():number;\n    getRedoSteps():number;\n    bindEvent(eventType:eventType,fn:(item:any)=>void);\n    redo():void;\n    undo():void;\n    clean():void;\n    destory():void;\n}\n\n\n\nexport interface ClConfig{\n    /**\n     * 容器元素\n     */\n    container:HTMLElement;\n    /** 画布宽度 */\n    width: number;\n    /** 画布高度 */\n    height: number;\n    /** 缩略图配置项 */\n    minimap?:{\n        size:[number,number]|number,\n        className:string,\n    };\n    /** 布局方向: \"vertical\"=>垂直|\"horizontal\"=>水平*/\n    direction:directionType;\n    /** 是否开启画布自适应容器功能(有一定性能损耗)，默认关闭 */\n    fitview?:boolean;\n    /** 默认的节点样式(非必传) */\n    defaultNode?:{\n        /** 节点类型 */\n        type:string;\n        /** 节点大小 */\n        size:number;\n        labelCfg:{\n            style:{\n                fill:string;\n                fontSize:number\n            }\n        };\n        style:{\n            stroke:string;\n            fill:string;\n            width:number\n        }\n    };\n    /** 默认的节点各种状态下的样式(非必传) */\n    nodeStateStyles?:{\n        selected?:{\n            stroke:string;\n            fill:string;\n        }\n    };\n    /** 节点和边的基础颜色,必须要是16进制颜色码，因为内部有颜色翻转的逻辑 */\n    baseNodeColor?:string;\n    baseEdgeColor?:string;\n    /** 最大记忆操作数（撤销/恢复的最大步数） */\n    backStep?:number;\n    /** 渲染模式，svg|canvas （只有svg才支持自定义dom图形，但性能上canvas最好） */\n    renderer:\"svg\"|\"canvas\"\n}\n\n/**\n * cl-flow核心逻辑\n * @author chrislee\n * @Time 2020/9/15\n */\nclass ClFlowCore implements ClFlowClass {\n    /** G6图形底层实例 */\n    instance:typeof G6 = G6;\n    /** 图实例对象 */\n    private graph:Graph|null = null;\n    /** 初始化配置项 */\n    private config:ClConfig ;\n    /** 元素监听器 */\n    private resizer:Resizer|null = null;\n    /** 撤销对象双端队列 */\n    private undoDeQueue:DeQueue|null = null;\n    /** 恢复对象双端队列 */\n    private redoDeQueue:DeQueue|null = null;\n    /** 最大可恢复步数 */\n    private maxStep:number = 0;\n    /** 用于记录没有父节点的起始节点*/\n    private freeNodes:string[] = [];\n    /** 事件注册存储器 */\n    private events:Array<{type:eventType,fn:Function}>=[];\n    /** 储存正在移动的节点图形关键信息（用于在撤销/恢复中模拟轨迹还原） */\n    private movingNode:{x:number,y:number,id:string} | null= null;\n    constructor(config:ClConfig){\n        const validate:boolean = validateConfig(config);\n        if(validate){\n            this.config = config;\n            this.config[\"baseEdgeColor\"] = this.config.baseEdgeColor??\"#000A34\";\n            this.config[\"baseNodeColor\"] = this.config.baseNodeColor??\"#FFFFFF\";\n        }else{\n            throw new Error(\"please check the config type\");\n        };\n        nodeRegisterInit(G6,this.config);\n        edgeRegisterInit(G6,this.config);\n        this.initEventProxy();\n    }\n\n    /**\n     * 初始化一个流程图\n     * @param data 图数据\n     * @author chrislee\n     * @Time 2020/9/15\n     */\n    init(data:GraphData){\n        let minimap:MiniMap|null = null;\n        if(this.config.minimap){\n            const checkKey = Object.keys(this.config.minimap).includes(\"size\")&&Object.keys(this.config.minimap).includes(\"className\");\n            if(checkKey&&(isArray(this.config.minimap.size)||typeof this.config.minimap.size ===\"number\")){\n                minimap = new G6.Minimap({\n                    size:this.config.minimap.size??[100,100],\n                    className:this.config.minimap.className??\"\",\n                    type:\"delegate\"\n                })\n            }\n        }\n        const graph = new G6.Graph({\n            container: this.config[\"container\"],\n            width: this.config[\"width\"],\n            height: this.config[\"height\"],\n            animate:true,\n            enabledStack: true,\n            modes: {\n                default: [\"drag-canvas\", \"zoom-canvas\", \"drag-node\", \"click-select\"],\n                focus: [\"drag-canvas\"]\n            },\n            layout: {\n                type: \"dagre\",\n                rankdir: this.config.direction===\"horizontal\"?\"LR\":\"TB\",\n                align: \"UL\",\n                controlPoints: true,\n                workerEnabled: true\n            },\n            fitView: this.config.fitview??false,\n            defaultNode: {\n                type: \"node\",\n                size: 200,\n                labelCfg: {\n                    style: {\n                        fill: ColorReverse(this.config.baseNodeColor as string),\n                        fontSize: 10,\n                    },\n                },\n                style: {\n                    stroke: \"#72CC4A\",\n                    fill: this.config.baseNodeColor,\n                    width: 200,\n                },\n                ...this.config.defaultNode??{}\n            },\n            // 要支持dom自定义图形，必须使用svg来渲染，虽然性能没有canvas好，但是，本身工作流不涉及复杂的交互\n            renderer: \"svg\",\n            nodeStateStyles: {\n                selected: {\n                    stroke: \"#666\",\n                    lineWidth: 2,\n                    fill: \"lightBlue\",\n                },\n                default: {\n                    size: 200,\n                    fill: this.config.baseNodeColor,\n                    stroke: \"#72CC4A\",\n                    width: 200,\n                },\n                ...this.config.nodeStateStyles??{}\n            },\n            defaultEdge: {\n                type: \"line\",\n                labelCfg: {\n                    style: {\n                        fontSize: 20,\n                    },\n                },\n                style: {\n                    stroke: this.config.baseEdgeColor,\n                    radius: 10,\n                    lineWidth: 10,\n                    endArrow: {\n                        path: \"M 0,0 L -2,1 L 0,0 L -2,-1 L 0,0\",\n                        fill: this.config.baseEdgeColor,\n                        stroke: \"#666\",\n                    }\n                },\n            },\n            plugins: this.config.minimap?[minimap]:[]\n        });\n        graph.data({...data});\n        graph.render();\n        this.graph = graph;\n        this.config.fitview&&this.registerResizer(this.config.container,graph);\n        this.createDequeue(this.config.backStep??0);\n        this.registeEvent()\n        return this\n    }\n\n    /**\n     * 检测是否存在graph对象(是否已初始化)\n     * @author chrislee\n     * @Time 2020/9/16\n     */\n    private checkGraph(){\n        if(this.graph===null){\n            throw new Error(`please run method \"init()\" first!`)\n        }else{\n            return this.graph\n        }\n    }\n\n    /**\n     * 注册一个检测dom元素的size变化监听器\n     * @param dom 目标dom\n     * @param graph 图实例\n     * @author chrislee\n     * @Time 2020/9/15\n     */\n    private registerResizer(dom:HTMLElement,graph:Graph){\n        let id = dom.id;\n        const resizer = new Resizer(id);\n        resizer.init();\n        resizer.resizer((rect)=>{\n            graph.changeSize(rect.width,rect.height)\n        })\n        this.resizer = resizer;\n    }\n\n    /**\n     * 创建双端队列用于记忆可恢复/撤销的状态快照\n     * @param steps 最大恢复步数\n     * @returns {void}\n     * @author chrislee\n     * @Time 2020/9/15\n     */\n    private createDequeue(steps:number){\n        if(steps<=0) return;\n        this.maxStep = steps;\n        this.undoDeQueue = new DeQueue();\n        this.redoDeQueue = new DeQueue();\n    }\n\n    /**\n     * 推入一个快照到撤销队列尾部，并根据最大步数维持长度\n     * @param item 操作快照对象\n     * @author chrislee\n     * @Time 2020/9/15\n     */\n    private enterUndoQueue(item:snapshot){\n        if(this.redoDeQueue===null) return\n        this.redoDeQueue.push(item);\n        let size = this.redoDeQueue.size();\n        while(size>this.maxStep){\n            this.redoDeQueue.shift();\n            size = this.redoDeQueue.size()\n        }\n    }\n\n    /**\n     * 清空恢复队列\n     * @author chrislee\n     * @Time 2020/9/15\n     */\n    private cleanRedoQueue(){\n        if(this.redoDeQueue===null) return\n        this.redoDeQueue.clear()\n    }\n    \n    /**\n     * 使用proxy初始化一个事件存储器，自动过滤重复类型的事件\n     * @author chrislee\n     * @Time 2020/9/18\n     */\n    private initEventProxy(){\n        this.events = new Proxy<Array<{type:eventType,fn:Function}>>([],{\n            set(target,key,value){\n                if(key !== \"length\"){\n                    let eventIdx:number = target.findIndex(event => event.type===value.type);\n                    if(eventIdx===-1){\n                        target.push(value)\n                    }else{\n                        target[eventIdx] = value\n                    }\n                    return true\n                }else{\n                    return Reflect.set(target,key,Object.keys(target).length)\n                }\n            }\n        })\n    }\n\n    /**\n     * 注册所有event储存器里的事件(对于节点拖拽移动事件，内置记录轨迹状态逻辑)\n     * @author chrislee\n     * @Time 2020/9/18\n     */\n    private registeEvent(){\n        const graph = this.checkGraph();\n        const len = this.events.length;\n        for(let i=0;i<len;i++){\n            graph.on(this.events[i].type,(evt) => {\n                if(this.events[i].type === \"node:dragstart\"){\n                    this.movingNode = {x:evt.x,y:evt.y,id:evt?.item?._cfg?.id??null};\n                    if(this.movingNode.id===null){\n                        return\n                    }\n                };\n                if(this.events[i].type === \"node:dragend\"){\n                    const moveTarget = evt.item._cfg.model;\n                    if(this.movingNode&&moveTarget.id === this.movingNode.id){\n                        const nodeData = graph.findById(moveTarget.id).getModel() as nodeInfo;\n                        this.enterUndoQueue({\n                            action:\"update\",\n                            payload:{\n                                before:{nodeData:{...nodeData,...{x:this.movingNode.x,y:this.movingNode.y}}},\n                                after:{nodeData:{...nodeData}}\n                            }\n                        });\n                        this.cleanRedoQueue();\n                        this.movingNode = null;\n                    }\n                };\n                this.events[i].fn(evt);\n            })\n        }\n    }\n\n    /**\n     * 创建一个新节点\n     * @param info 节点信息\n     * @author chrislee\n     * @Time 2020/9/15\n     */\n    createNode(info:nodeInfo){\n        const graph = this.checkGraph();\n        const nodeData = {\n            id:info.id,\n            x:info.x??100,\n            y:info.y??100,\n            size:info.size??100,\n            anchorPoints:info.anchorPoints??[[0.5,0],[1,0.5],[0.5,1],[0,0.5]],\n            type:info.type??\"node\",\n            extra:info.extra??{},\n            style:info.style,\n            label:info.label??\"\",\n        }\n        try{\n            graph.addItem(\"node\",nodeData);\n            this.freeNodes.includes(info.id)===false && this.freeNodes.push(info.id);\n            this.enterUndoQueue({action:\"create\",payload:{nodeData}});\n            this.cleanRedoQueue()\n        }catch(e){\n            console.error(e);\n        }\n    }\n\n    /**\n     * 以一个节点为基础生成指向另一个节点的关系\n     * @param source 起始节点\n     * @param target 目标节点\n     * @param type 生成单节点还是条件节点 single=>单节点| multi=>条件节点\n     */\n    addRelation(source:nodeInfo,target:nodeInfo,type:\"single\"|\"multi\"){\n        const graph = this.checkGraph();\n        const direction = this.config.direction;\n        const {nodes,edges} = this.graph?.save()  as GraphData\n        const targetId:string = target.id??`node${(nodes?.length ?? 0) + 1}`;\n        // 计算下一个节点在指定的流向布局中应该绘制的坐标\n        const position = countNextNodePosition(direction, source);\n        // 对于添加单个点来说，创建一个指向只需要新增一个节点和一条从当前节点指向它的边即可\n        const nodeData = {\n            id:targetId,\n            label:target.label??\"\",\n            type:target.type??\"node\",\n            style:target.style??{},\n            x:position.x,\n            y:position.y,\n            size:target.size??100,\n            labelCfg: { style: { fontSize: Number((target.size??100) / 5) }},\n        }\n        const edgeData = {\n            id: `edge${(edges?.length ?? 0) + 1}`,\n            source: source.id,\n            target: targetId\n        }\n        try{\n            graph.addItem(\"node\",nodeData);\n            graph.addItem(\"edge\",edgeData);\n        }catch(e){\n            console.error(e)\n        }\n        // 创建一次快照\n        let snapshot:snapshot = {action:\"addRelation\",payload:{source:source,target:nodeData,edge:edgeData}};\n        // 对于创建条件分支节点来说（比如网关等流程），那么就需要在以上的情况下，再衍生出两条指向和两个点形成分支的关系\n        if(type === \"multi\"){\n            const sourceAnchor: number[] = direction === \"horizontal\" ? [0, 2] : [1, 3];\n            const targetAnchor: number = direction === \"horizontal\" ? 3 : 0;\n            const childPositon = countNextNodePosition(direction, nodeData);\n            const onNode = {\n                id: target.id?target.id+\"1\":`node${(nodes?.length ?? 0) + 2}`,\n                label: target.label ? target.label+\"1\" : \"\",\n                type: \"node\",\n                style:{},\n                size: target.size??100,\n                labelCfg: { style: { fontSize: Number((target.size??100) / 5) }},\n                x: direction === \"horizontal\" ? childPositon.x : childPositon.x + 200,\n                y: direction === \"horizontal\" ? childPositon.y - 200 : childPositon.y\n            };\n            const offNode = {\n                id: target.id?target.id+\"2\":`node${(nodes?.length ?? 0) + 3}`,\n                label: target.label ? target.label+\"2\" : \"\",\n                type: \"node\",\n                style:{},\n                size: target.size??100,\n                labelCfg: { style: { fontSize: Number((target.size??100)  / 5) }},\n                x: direction === \"horizontal\" ? childPositon.x : childPositon.x - 200,\n                y: direction === \"horizontal\" ? childPositon.y + 200 : childPositon.y\n            };\n            const onEdge = {\n                id: `edge${(edges?.length ?? 0) + 2}`,\n                source: targetId,\n                type: `mutex-line-${direction}`,\n                target: target.id?target.id+\"1\":`node${(nodes?.length ?? 0) + 2}`,\n                sourceAnchor: sourceAnchor[0],\n                targetAnchor\n            };\n            const offEdge = {\n                id: target.id?target.id+\"2\":`node${(nodes?.length ?? 0) + 3}`,\n                source: targetId,\n                type: `mutex-line-${direction}`,\n                target: `node${(nodes?.length ?? 0) + 3}`,\n                sourceAnchor: sourceAnchor[1],\n                targetAnchor\n            };\n            try{\n                graph.addItem(\"node\", onNode);\n                graph.addItem(\"node\", offNode);\n                graph.addItem(\"edge\", onEdge);\n                graph.addItem(\"edge\", offEdge);\n                snapshot = {\n                    action:\"multiNode\",\n                    payload:{\n                        source:source,\n                        target:nodeData,\n                        edge:edgeData,\n                        multiInfo:{\n                            onNode,\n                            onEdge,\n                            offNode,\n                            offEdge\n                        }\n                    }\n                }\n            }catch(e){\n                console.error(e)\n            }\n        }\n        this.enterUndoQueue(snapshot)\n        this.cleanRedoQueue()\n    }\n\n    /**\n     * 更新一个节点的信息，包括移动、业务信息、节点形态等变换\n     * @param nodeData 节点信息\n     * @author chrislee\n     * @Time 2020/9/16\n     */\n    updateNode(nodeData:nodeInfo){\n        const graph = this.checkGraph();\n        let originNodeData = {...graph.findById(nodeData.id).getModel() as NodeConfig};\n        try{\n            graph.updateItem(\"node\",nodeData as NodeConfig)\n        }catch(e){\n            console.error(e)\n        }\n        this.enterUndoQueue({\n            action:\"update\",\n            payload:{\n                before:{nodeData:(originNodeData as nodeInfo)},\n                after:{nodeData}\n            }\n        });\n        this.cleanRedoQueue()\n    }\n\n    /**\n     * 删除一个节点\n     * @param id 节点的id\n     * @author chrislee\n     * @Time 2020/09/16\n     */\n    deleteNode(id:string){\n        const graph = this.checkGraph();\n        let originNodeData = graph.findById(id).getModel() as NodeConfig;\n        try{\n            graph.removeItem(id);\n            this.enterUndoQueue({\n                action:\"delete\",\n                payload:{\n                    nodeData:originNodeData as nodeInfo\n                }\n            });\n            this.cleanRedoQueue()\n        }catch(e){\n            console.error(e)\n        }\n    }\n\n    /**\n     * 添加一组回流关系(调用前请确保通过getRebackNodes获取可以创建回流的节点列表)\n     * @param sourceId 源头节点id\n     * @param targetId 目标节点id\n     * @author chrislee\n     * @Time 2020/9/16\n     */\n    addReback(sourceId:string,targetId:string){\n        const graph = this.checkGraph();\n        const {direction} = this.config;\n        const {edges} = graph.save() as GraphData;\n        const sourceNode = graph.findById(sourceId).getModel() as NodeConfig;\n        const targetNode = graph.findById(targetId).getModel() as NodeConfig;\n        if(!sourceNode||!targetNode) throw new Error(`The node id is invalid`)\n        // 理论上每次更新一个节点的回流关系，都要先移除他上一次建立的关系\n        const lastRebackNode = (sourceNode as nodeInfo).reback??null;\n        if (lastRebackNode) {\n            const targetEdge = edges?.find((edge) => {\n                return edge.source === sourceId && edge.target === lastRebackNode.id\n            });\n            if (targetEdge) {\n                graph.remove(targetEdge.id as string);\n            }\n        }\n        const anchor = direction === \"horizontal\" ? 0 : 3;\n        const edgeData: EdgeConfig = {\n            id: `edge${(edges?.length ?? 0) + 1}`,\n            type: `reback-line-${direction}`,\n            source: sourceId,\n            target: targetId,\n            sourceAnchor: anchor,\n            targetAnchor: anchor\n        };\n        graph.addItem(\"edge\", edgeData);\n        graph.updateItem(sourceId,{...sourceNode,...{reback:{id:targetId}}});\n        this.enterUndoQueue({\n            action:\"addReback\",\n            payload:{\n                edge:edgeData,\n                source:{...sourceNode,...{reback:{id:targetId}}} as nodeInfo\n            }\n        })\n        this.cleanRedoQueue()\n    }\n\n    \n    /**\n     * 查找目标节点可创建回流关系的可用节点\n     * @param id 查找目标id\n     * @returns {array} 返回所有可用的节点信息\n     * @author chrislee\n     * @Time 2020/9/16\n     */\n    getRebackNodes(id):Array<any>{\n        if(this.freeNodes.includes(id)) return []\n        const graph = this.checkGraph();\n        const {findAllPath} = Algorithm;\n        // 查找所有\n        const allPaths = this.freeNodes.map(nodeId => {\n            return findAllPath(graph,nodeId,id,true)\n        }).filter(path => path.length>0);\n        const result:Array<any> = [];\n        allPaths.forEach(path => {\n            for(let i=0;i<path.length;i++){\n                if(path[i]!==id){\n                    let node = graph.findById(path[i]);\n                    result.push(node)\n                }\n            }\n        });\n        return result\n    }\n\n    /**\n     * 获取最大可撤回步数\n     * @author chrislee\n     * @Time 2020/9/21\n     */\n    getUndoSteps():number{\n        return this.undoDeQueue?.size() ?? 0\n    }\n    /**\n     * 获取最大可恢复步数\n     * @author chrislee\n     * @Time 2020/9/21\n     */\n    getRedoSteps(){\n        return this.redoDeQueue?.size() ?? 0\n    }\n    /**\n     * 清除流程图画布内容\n     * @author chrislee\n     * @Time 2020/9/18\n     */\n    clean(){\n        const graph = this.checkGraph();\n        const {nodes,edges} = graph.save() as GraphData;\n        this.enterUndoQueue({\n            action:\"clear\",\n            payload:{\n                graph:{...nodes,...edges}\n            }\n        })\n        graph.clear();\n        this.cleanRedoQueue()\n    }\n\n    /**\n     * 销毁graph实例\n     * @author chrislee\n     * @Time 2020/9/18\n     */\n    destory(){\n        const graph = this.checkGraph();\n        graph.destroy();\n        this.graph = null;\n    }\n\n    /**\n     * 绑定事件（实际上会在初始化graph实例后就马上进行绑定），意味着应该在初始化前就定义好\n     * @param eventType 事件类型\n     * @param fn 具体执行逻辑\n     * @author chrislee\n     * @Time 2020/9/18\n     */\n    bindEvent(eventType:eventType,fn:(item:any)=>void){\n        this.events.push({type:eventType,fn});\n    }\n\n     /**\n     * 执行撤销操作(核心逻辑是给每个操作打上tag和那一次用到得数据载荷，进行靶向回溯而不是全量更新节点树)\n     * @author chrislee\n     * @Time 2020/9/18\n     */\n    undo(){\n        if(this.undoDeQueue===null) return\n        const graph = this.checkGraph();\n        const snapshot = this.undoDeQueue.pop() as snapshot;\n        if(!snapshot) return\n        let resloveSuccess:boolean = true;\n        switch(snapshot.action){\n            case \"create\":\n                const createNode = snapshot.payload.nodeData;\n                try{\n                    graph.removeItem(createNode.id);\n                }catch(e){\n                    console.error(e);\n                    resloveSuccess = false\n                }\n                break;\n            case \"delete\":\n                const deleteNode = snapshot.payload.nodeData;\n                const nodeData = {\n                    id:deleteNode.id,\n                    x:deleteNode.x??100,\n                    y:deleteNode.y??100,\n                    size:deleteNode.size??100,\n                    anchorPoints:deleteNode.anchorPoints??[[0.5,0],[1,0.5],[0.5,1],[0,0.5]],\n                    type:deleteNode.type??\"node\",\n                    extra:deleteNode.extra??{},\n                    style:deleteNode.style,\n                    label:deleteNode.label??\"\",\n                }\n                try{\n                    graph.addItem(\"node\",nodeData);\n                }catch(e){\n                    console.error(e);\n                    resloveSuccess = false\n                }\n                break;\n            case \"update\":\n                const beforeNode = snapshot.payload.before.nodeData;\n                graph.updateItem(beforeNode.id,beforeNode as NodeConfig);\n                break;\n            case \"multiNode\":\n                const multiNodeTarget = snapshot.payload.target;\n                const multiNodeEdge = snapshot.payload.edge;\n                const multiInfo = snapshot.payload.multiInfo;\n                try{\n                    graph.removeItem(multiNodeTarget.id);\n                    graph.removeItem(multiNodeEdge.id);\n                    graph.removeItem(multiInfo.onNode.id);\n                    graph.removeItem(multiInfo.onEdge.id);\n                    graph.removeItem(multiInfo.offNode.id);\n                    graph.removeItem(multiInfo.offEdge.id);\n                }catch(e){\n                    console.error(e);\n                    resloveSuccess = false\n                }\n                break;\n            case \"clear\":\n                const originGraphData = snapshot.payload.graph;\n                try{\n                    graph.changeData(originGraphData);\n                }catch(e){\n                    console.error(e);\n                    resloveSuccess = false\n                }\n                break;\n            case \"addReback\":\n                const rebackEdge = snapshot.payload.edge as EdgeConfig;\n                const source = snapshot.payload.source;\n                try{\n                    graph.updateItem(source.id,{...source,...{reback:null}});\n                    graph.removeItem(rebackEdge.id as string);\n                }catch(e){\n                    console.error(e);\n                    resloveSuccess = false\n                }\n                break;\n            case \"addRelation\":\n                const relationTarget = snapshot.payload.target;\n                const relationEdge = snapshot.payload.edge;\n                try{\n                    graph.removeItem(relationEdge.id);\n                    graph.removeItem(relationTarget.id);\n                }catch(e){\n                    console.error(e);\n                    resloveSuccess = false\n                }\n                break;\n            default:\n                return\n        }\n        if(resloveSuccess){\n            this.redoDeQueue?.push(snapshot)\n        }\n    }\n\n    /**\n     * 执行恢复操作\n     * @author chrislee\n     * @Time 2020/9/18\n     */\n    redo(){\n        if(this.redoDeQueue===null) return;\n        const graph = this.checkGraph();\n        const snapshot = this.redoDeQueue.pop() as snapshot;\n        if(!snapshot) return\n        let resloveSuccess:boolean = true;\n        switch(snapshot.action){\n            case \"create\":\n                const createNode = snapshot.payload.nodeData;\n                try{\n                    graph.addItem(\"node\",createNode as NodeConfig);\n                }catch(e){\n                    console.error(e);\n                    resloveSuccess = false;\n                };\n                break;\n            case \"delete\":\n                const deleteNode = snapshot.payload.nodeData;\n                try{\n                    graph.removeItem(deleteNode.id)\n                }catch(e){\n                    console.error(e);\n                    resloveSuccess = false;\n                };\n                break;\n            case \"update\":\n                const updateNode = snapshot.payload.after.nodeData;\n                try{\n                    graph.updateItem(updateNode.id,updateNode as NodeConfig)\n                }catch(e){\n                    console.error(e);\n                    resloveSuccess = false;\n                };\n                break;\n            case \"clear\":\n                graph.clear();\n                break;\n            case \"multiNode\":\n                const multiTargetNode = snapshot.payload.target;\n                const multiEdge = snapshot.payload.edge;\n                try{\n                    graph.addItem(\"node\",multiTargetNode as NodeConfig);\n                    graph.addItem(\"edge\",multiEdge as EdgeConfig);\n                    graph.addItem(\"node\",snapshot.payload.multiInfo.onNode as NodeConfig);\n                    graph.addItem(\"node\",snapshot.payload.multiInfo.offNode as NodeConfig);\n                    graph.addItem(\"edge\",snapshot.payload.multiInfo.onEdge as EdgeConfig);\n                    graph.addItem(\"edge\",snapshot.payload.multiInfo.offEdge as EdgeConfig);\n                }catch(e){\n                    console.error(e);\n                    resloveSuccess = false;\n                };\n                break;\n            case \"addReback\":\n                const rebackSource = snapshot.payload.source;\n                const rebackEdge = snapshot.payload.edge;\n                const targetId = rebackEdge.target;\n                try{\n                    graph.updateItem(rebackSource.id,{...rebackSource,...{reback:{id:targetId}}});\n                    graph.addItem(\"edge\",rebackEdge)\n                }catch(e){\n                    console.error(e);\n                    resloveSuccess = false;\n                };\n                break;\n            case \"addRelation\":\n                const relationTarget = snapshot.payload.target;\n                const relationEdge = snapshot.payload.edge;\n                try{\n                    graph.addItem(\"node\",relationTarget as NodeConfig);\n                    graph.addItem(\"edge\",relationEdge as EdgeConfig);\n                }catch(e){\n                    console.error(e);\n                    resloveSuccess = false;\n                };\n                break;\n            default:\n                return\n        }\n        if(resloveSuccess){\n            this.enterUndoQueue(snapshot)\n        }\n    }\n\n   \n\n}\n\nexport default ClFlowCore"],"names":[],"mappings":"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"}